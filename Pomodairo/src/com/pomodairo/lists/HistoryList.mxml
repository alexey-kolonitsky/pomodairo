<?xml version="1.0"?>
<!--
  Created by akalanitski on 07.12.2016.
-->
<s:Group
    xmlns:fx="http://ns.adobe.com/mxml/2009"
    xmlns:s="library://ns.adobe.com/flex/spark"
    xmlns:mx="library://ns.adobe.com/flex/mx"
    xmlns:components="com.pomodairo.components.*">

    <fx:Script><![CDATA[
        import com.pomodairo.EmbedImages;
        import com.pomodairo.EmbedStyle;
        import com.pomodairo.TableUtils;
        import com.pomodairo.core.Storage;
        import com.pomodairo.settings.ConfigManager;

        import mx.collections.ArrayCollection;
        import mx.events.ItemClickEvent;


        public var configManager:ConfigManager;
        public var storage:Storage;

        public function copyTableToClipboard(title:String,
                                             data:Array):void {
            var tmpString:String = new TableUtils().getTableAsCsv(data);
            System.setClipboard(tmpString);
        }

        private var _timer:Timer;
        private var _lastUpdate:uint;
        /* ms */
        private var UPDATE_DELAY:Number = 1000;
        /* ms */

        public function init():void {
            trace("[INFO][HistoryList] init");
            _timer = new Timer(UPDATE_DELAY);
            _timer.addEventListener(TimerEvent.TIMER, timerTickHandler);
            _timer.start();

            storage.getPomodorosPerDay(histogramDataHandler);
            storage.addEventListener(Storage.HISTORY_UPDATED, updateHistory);
        }

        private function histogramDataHandler(event:SQLEvent):void {
            var statement:SQLStatement = event.currentTarget as SQLStatement;
            statement.removeEventListener(SQLEvent.RESULT, histogramDataHandler);
            var result:SQLResult = statement.getResult();
            if (result != null && result.data != null && result.data.length > 0) {
                timeline.historyGroupByDay = result.data;
                trace("[INFO][HistoryList] histogramDataHandler, length" + result.data.length);
                dispatchEvent(new Event(Storage.HISTORY_UPDATED));
            } else {
                timeline.historyGroupByDay = [];
                trace("[INFO][HistoryList] histogramDataHandler, no result");
                dispatchEvent(new Event(Storage.HISTORY_UPDATED));
            }
        }

        private function updateHistory(event:Event):void {
            list.dataProvider = new ArrayCollection(storage.pomodorosOfDayDataset);
        }

        private function timerTickHandler(event:TimerEvent):void {
            update();
        }

        private var _needUpdate:Boolean = false;

        private function needUpdate():void {
            _needUpdate = true;
            update();
        }

        private function update():void {
            var timePassed:Boolean = getTimer() - _lastUpdate > UPDATE_DELAY;
            if (_needUpdate && timePassed) {
                switch (statisticPeriod.selectedIndex) {
                    case 0:
                        storage.getPromodorosByDate(timeline.cursorDate, timeline.dateCount, pomodoroFilter.text);
                        break;
                    case 1:
                        storage.getPomodorosPerDay();
                        break;
                    case 2:
                        storage.getRealityFactors();
                        break;
                }
                _needUpdate = false;
            }
        }

        private function updateLabel():void {
            labelDates.text = timeline.dateCount + " days, from " + timeline.cursorDate.fullYear + "-" + timeline.cursorDate.month + "-" + timeline.cursorDate.date;
        }
        ]]>
    </fx:Script>

    <s:BorderContainer height="32" width="100%"
        backgroundColor="{EmbedStyle.SECTION_BACKGROUND_COLOR}"
        borderVisible="false">
        <s:layout>
            <s:HorizontalLayout verticalAlign="middle"/>
        </s:layout>
        <s:Label text="HISTORY"
            color="{EmbedStyle.SECTION_TEXT_COLOR}"
            fontWeight="bold"
            paddingLeft="4"/>
        <mx:ToggleButtonBar id="statisticPeriod" dataProvider="{['T', 'D', 'W']}" itemClick="{needUpdate()}">

        </mx:ToggleButtonBar>
        <mx:Label id="labelDates" />
        <s:Spacer width="100%" />
        <s:BitmapImage source="{EmbedImages.ICON_SEARCH}" width="24" height="24"/>
        <s:TextInput id="pomodoroFilter" width="132" height="32" change="{needUpdate()}"
            contentBackgroundAlpha="0"
            color="{EmbedStyle.COMMON_TEXT_COLOR}" />
        <mx:Button width="32" height="32" icon="{EmbedImages.ICON_COPY_CLASS}"
            click="copyTableToClipboard('Pomodoros', storage.pomodorosOfDayDataset)"/>
    </s:BorderContainer>

    <components:TimeLine id="timeline" top="32" right="0" height="32" left="0"
        timelineValueChanged="{updateLabel()}"
        timelineValueCommited="{needUpdate()}"
    />

    <!-- task list -->
    <s:List id="list"
        top="64" right="0" bottom="0" left="0"
        contentBackgroundAlpha="0"
        borderVisible="false"
        doubleClickEnabled="true"
        itemRenderer="com.pomodairo.lists.renderers.PomodoroOfDayRenderer"
        dragMoveEnabled="true" width="100%">
    </s:List>
</s:Group>
