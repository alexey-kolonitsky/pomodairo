<?xml version="1.0"?>
<components:PomodairoBaseRenderer
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:components="com.pomodairo.components.*"
        height="32" width="100%">


    <fx:Script>
        <![CDATA[
        import com.pomodairo.EmbedStyle;
        import com.pomodairo.components.*;
        import com.pomodairo.data.Pomodoro;
        import com.pomodairo.core.PomodoroEventDispatcher;
        import com.pomodairo.core.TaskManager;
        import com.pomodairo.events.PomodoroEvent;

        private var _pomodoro:Pomodoro = null;
        private var _isRunning:Boolean = false;


        override public function set data(value:Object):void {
            super.data = value;
            destroy();
            _pomodoro = data as Pomodoro;
            if (_pomodoro == null) {
                nameLabel.text = "";
                doneButton.enabled = false;
                _strikethrough = false;
                _estimated = _pomodoro.estimated;
                _actual = _pomodoro.pomodoros;
                _unplanned = _pomodoro.interruptions + _pomodoro.unplanned;
            } else {
                nameLabel.text = _pomodoro.name;
                doneButton.enabled = true;
                doneButton.selected = _pomodoro.done;
                _strikethrough = _pomodoro.done;
                _estimated = _pomodoro.estimated;
                _actual = _pomodoro.pomodoros;
                _unplanned = _pomodoro.interruptions + _pomodoro.unplanned;
                _isRunning = _pomodoro.isRunning;
                _pomodoro.addEventListener(PomodoroEvent.POMODORO_CHANGED, onStartPomodoro);
            }
            invalidateDisplayList();
        }

        private function destroy():void {
            if (_pomodoro != null) {
                _pomodoro.removeEventListener(PomodoroEvent.POMODORO_CHANGED, onStartPomodoro);
            }
        }

        private function onStartPomodoro(event:PomodoroEvent):void {
            _isRunning = _pomodoro.isRunning;
            invalidateDisplayList();
        }

        override protected function updateDisplayList(unscaledWidth:Number,
                                                      unscaledHeight:Number):void {
            super.updateDisplayList(unscaledWidth, unscaledHeight);

            if (_isRunning) {
                setStyle('color', EmbedStyle.POMODORO_TIMER_COLOR);
            }
        }

        private function onDonePomodoroClicked(event:Event = null):void {

            if (_pomodoro.done) {
                _pomodoro.closed = null;
            }
            else {
                _pomodoro.closed = new Date();
            }
            _pomodoro.done = !_pomodoro.done;
            // Following is done by event listener in db object.
            // db.markDone(pom);
            // Dispatch event.
            var evt:PomodoroEvent = new PomodoroEvent(PomodoroEvent.DONE);
            evt.pomodoro = _pomodoro;
            PomodoroEventDispatcher.instance.dispatchEvent(evt);

            TaskManager.instance.findNextTask();
            invalidateDisplayList();
        }
        ]]>
    </fx:Script>

    <s:HGroup left="4" top="0" right="4" bottom="0" verticalAlign="middle" gap="2">
        <mx:CheckBox id="doneButton" change="onDonePomodoroClicked()"/>
        <s:Label id="nameLabel" width="100%" lineBreak="explicit" paddingTop="2" paddingLeft="5"/>
    </s:HGroup>

</components:PomodairoBaseRenderer>
