<?xml version="1.0" encoding="utf-8"?>
<config:BaseConfigPanel
		xmlns:mx="http://www.adobe.com/2006/mxml"
		xmlns:config="com.pomodairo.components.config.*"
		xmlns:s="library://ns.adobe.com/flex/spark"
		creationComplete="init()">


<mx:Script>
        <![CDATA[
	import com.pomodairo.EmbedImages;
	import com.pomodairo.EmbedStyle;
	import com.pomodairo.PomodoroEventDispatcher;
	import com.pomodairo.db.Storage;
	import com.pomodairo.events.ConfigurationUpdatedEvent;
	import com.pomodairo.settings.ConfigItemName;
	import com.pomodairo.settings.ConfigItemName;
	import com.pomodairo.settings.ConfigManager;

	import mx.collections.ArrayCollection;


	private var soundEnabled:Boolean = true;
	private var volume:Number = 100;

	private var fadeTicking:Boolean = true;

	private var alarmSound:String = "";
	private var clockSound:String = "";

	var soundTypes:FileFilter = new FileFilter("Audio Files (*.mp3)", "*.mp3");
	var fileTypes:Array = new Array(soundTypes);
	private var alarmSoundFile:File = new File();
	private var clockSoundFile:File = new File();

	private function init():void {
		populate();
		applyGuiValues();
	}

	override public function populate():void {
		var conf:ConfigManager = ConfigManager.instance;
		if (conf.hasConfig("volume")) {
			volume = parseInt(conf.getConfig("volume"));
		}

		if (conf.hasConfig("sound")) {
			soundEnabled = conf.getBoolean("sound");
		}

		if (conf.hasConfig(ConfigItemName.FADE_TICKING_SOUND)) {
			fadeTicking = conf.getBoolean(ConfigItemName.FADE_TICKING_SOUND);
		}

		if (conf.hasConfig(ConfigItemName.ALARM_SOUND_FILE)) {
			alarmSound = conf.getConfig(ConfigItemName.ALARM_SOUND_FILE);
		}

		if (conf.hasConfig(ConfigItemName.CLOCK_SOUND_FILE)) {
			clockSound = conf.getConfig(ConfigItemName.CLOCK_SOUND_FILE);
		}

	}

	private function applyGuiValues():void {
		volumeSlider.value = volume;
		soundCheckbox.selected = soundEnabled;
		fadeTickingCheckbox.visible = fadeTickingCheckbox.includeInLayout = soundEnabled;
		alarmFileLocationInput.visible = alarmFileLocationInput.includeInLayout = soundEnabled;
		clockFileLocationInput.visible = clockFileLocationInput.includeInLayout = soundEnabled;
		fadeTickingCheckbox.selected = fadeTicking;
		alarmFileLocationInput.text = alarmSound;
		clockFileLocationInput.text = clockSound;
	}

	override public function save():void {
		volume = volumeSlider.value;
		soundEnabled = soundCheckbox.selected;
		fadeTicking = fadeTickingCheckbox.selected;
		alarmSound = alarmFileLocationInput.text;
		clockSound = clockFileLocationInput.text;

		Storage.instance.setConfigurationValue(ConfigItemName.SOUND_VOLUME, "" + volume);
		Storage.instance.setConfigurationValue(ConfigItemName.SOUND_ENABLED, "" + soundEnabled);
		Storage.instance.setConfigurationValue(ConfigItemName.FADE_TICKING_SOUND, "" + fadeTicking);
		Storage.instance.setConfigurationValue(ConfigItemName.ALARM_SOUND_FILE, "" + alarmSound);
		Storage.instance.setConfigurationValue(ConfigItemName.CLOCK_SOUND_FILE, "" + clockSound);

		notifyConfiguration();
	}

	override public function notifyConfiguration():void {
		// Notify the world
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.SOUND_VOLUME, "" + volume));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.SOUND_ENABLED, "" + soundEnabled));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.FADE_TICKING_SOUND, "" + fadeTicking));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.ALARM_SOUND_FILE, "" + alarmSound));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.CLOCK_SOUND_FILE, "" + clockSound));
	}

	private function selectAlarmFile():void {
		alarmSoundFile.addEventListener(Event.SELECT, setAlarmFilePath);
		alarmSoundFile.browse(fileTypes);
	}

	private function setAlarmFilePath(event:Event):void {
		alarmFileLocationInput.text = alarmSoundFile.nativePath;
		alarmSound = alarmSoundFile.nativePath;
	}

	private function selectClockFile():void {
		clockSoundFile.addEventListener(Event.SELECT, setClockFilePath);
		clockSoundFile.browse(fileTypes);
	}

	private function setClockFilePath(event:Event):void {
		clockFileLocationInput.text = clockSoundFile.nativePath;
		clockSound = clockSoundFile.nativePath;
	}
	]]>
    </mx:Script>

	<s:VGroup width="100%">
		<s:HGroup width="100%" verticalAlign="middle">
			<s:Label text="SOUND"
					 backgroundColor="{EmbedStyle.SECTION_BACKGROUND_COLOR}"
					 color="{EmbedStyle.SECTION_TEXT_COLOR}"
					 fontWeight="bold"
					 height="32" width="100%"  verticalAlign="middle" />
			<mx:CheckBox id="soundCheckbox" />
		</s:HGroup>

		<mx:CheckBox id="fadeTickingCheckbox" label="Fade ticking"/>

		<!-- Form item  -->
		<s:HGroup width="100%">
			<mx:Label text="Volume" color="#A9A9A9"/>
			<mx:HSlider id="volumeSlider" width="100%" minimum="0" maximum="100" snapInterval="5"/>
		</s:HGroup>

		<!-- Form item  -->
		<mx:Label color="#A9A9A9" text="Alarm Sound:" width="100%"/>
		<s:HGroup width="100%">
			<mx:TextInput id="alarmFileLocationInput" width="100%" height="32">
				<mx:toolTip>Custom sound file for the alarm. Leave empty for default.</mx:toolTip>
			</mx:TextInput>
			<mx:Button width="32" height="32" icon="{EmbedImages.ICON_FOLDER_OPEN_CLASS}" click="selectAlarmFile()" />
		</s:HGroup>

		<!-- Form item  -->
		<s:Label color="#A9A9A9" text="Clock Sound:" width="100%"/>
		<s:HGroup width="100%">
			<mx:TextInput id="clockFileLocationInput" width="100%" height="32">
				<mx:toolTip>Custom sound file for the clock sound. Leave empty for default.</mx:toolTip>
			</mx:TextInput>
			<mx:Button width="32" height="32" icon="{EmbedImages.ICON_FOLDER_OPEN_CLASS}" click="selectClockFile()"/>
		</s:HGroup>
	</s:VGroup>
	
</config:BaseConfigPanel>
