<?xml version="1.0" encoding="utf-8"?>
<config:BaseConfigPanel
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:config="com.pomodairo.components.config.*"
	creationComplete="init()" >


<mx:Script>
        <![CDATA[
	import com.pomodairo.PomodoroEventDispatcher;
	import com.pomodairo.db.Storage;
	import com.pomodairo.events.ConfigurationUpdatedEvent;
	import com.pomodairo.settings.ConfigItemName;
	import com.pomodairo.settings.ConfigItemName;
	import com.pomodairo.settings.ConfigManager;

	import mx.collections.ArrayCollection;


	private var soundEnabled:Boolean = true;
	private var volume:Number = 100;

	private var fadeTicking:Boolean = true;

	private var alarmSound:String = "";
	private var clockSound:String = "";

	var soundTypes:FileFilter = new FileFilter("Audio Files (*.mp3)", "*.mp3");
	var fileTypes:Array = new Array(soundTypes);
	private var alarmSoundFile:File = new File();
	private var clockSoundFile:File = new File();

	private function init():void {
		populate();
		applyGuiValues();
	}

	override public function populate():void {
		var conf:ConfigManager = ConfigManager.instance;
		if (conf.hasConfig("volume")) {
			volume = parseInt(conf.getConfig("volume"));
		}

		if (conf.hasConfig("sound")) {
			soundEnabled = conf.getBoolean("sound");
		}

		if (conf.hasConfig(ConfigItemName.FADE_TICKING_SOUND)) {
			fadeTicking = conf.getBoolean(ConfigItemName.FADE_TICKING_SOUND);
		}

		if (conf.hasConfig(ConfigItemName.ALARM_SOUND_FILE)) {
			alarmSound = conf.getConfig(ConfigItemName.ALARM_SOUND_FILE);
		}

		if (conf.hasConfig(ConfigItemName.CLOCK_SOUND_FILE)) {
			clockSound = conf.getConfig(ConfigItemName.CLOCK_SOUND_FILE);
		}

	}

	private function applyGuiValues():void {
		volumeSlider.value = volume;
		soundCheckbox.selected = soundEnabled;
		fadeTickingCheckbox.selected = fadeTicking;
		alarmFileLocationInput.text = alarmSound;
		clockFileLocationInput.text = clockSound;
	}

	public function save():void {
		volume = volumeSlider.value;
		soundEnabled = soundCheckbox.selected;
		fadeTicking = fadeTickingCheckbox.selected;
		alarmSound = alarmFileLocationInput.text;
		clockSound = clockFileLocationInput.text;
		new ArrayCollection()

		Storage.instance.setConfigurationValue(ConfigItemName.SOUND_VOLUME, "" + volume);
		Storage.instance.setConfigurationValue(ConfigItemName.SOUND_ENABLED, "" + soundEnabled);
		Storage.instance.setConfigurationValue(ConfigItemName.FADE_TICKING_SOUND, "" + fadeTicking);
		Storage.instance.setConfigurationValue(ConfigItemName.ALARM_SOUND_FILE, "" + alarmSound);
		Storage.instance.setConfigurationValue(ConfigItemName.CLOCK_SOUND_FILE, "" + clockSound);
		exit();

		notifyConfiguration();
	}

	override public function notifyConfiguration():void {
		// Notify the world
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.SOUND_VOLUME, "" + volume));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.SOUND_ENABLED, "" + soundEnabled));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.FADE_TICKING_SOUND, "" + fadeTicking));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.ALARM_SOUND_FILE, "" + alarmSound));
		PomodoroEventDispatcher.instance.dispatchEvent(new ConfigurationUpdatedEvent(ConfigurationUpdatedEvent.UPDATED, ConfigItemName.CLOCK_SOUND_FILE, "" + clockSound));
	}

	private function selectAlarmFile():void {
		alarmSoundFile.addEventListener(Event.SELECT, setAlarmFilePath);
		alarmSoundFile.browse(fileTypes);
	}

	private function setAlarmFilePath(event:Event):void {
		alarmFileLocationInput.text = alarmSoundFile.nativePath;
		alarmSound = alarmSoundFile.nativePath;
	}

	private function selectClockFile():void {
		clockSoundFile.addEventListener(Event.SELECT, setClockFilePath);
		clockSoundFile.browse(fileTypes);
	}

	private function setClockFilePath(event:Event):void {
		clockFileLocationInput.text = clockSoundFile.nativePath;
		clockSound = clockSoundFile.nativePath;
	}
	]]>
    </mx:Script>

	<mx:CheckBox id="soundCheckbox" x="178.8" y="15.3" label="Sound enabled"/>
	<mx:CheckBox id="fadeTickingCheckbox" x="178.8" y="45.3" label="Fade ticking"/>
	<mx:Button x="221" y="90" label="Save" click="save()" width="63"/>
	<mx:Button x="221" y="121" label="Cancel" click="exit()"/>
	<mx:HSlider id="volumeSlider" x="10" y="12" minimum="0" maximum="100" snapInterval="5"/>
	<mx:Label x="10" y="4" text="Volume" color="#A9A9A9"/>
	
	<mx:Label x="10" y="58.7" color="#A9A9A9" text="Alarm Sound:"/>
	<mx:TextInput id="alarmFileLocationInput" x="10" y="76" width="131">
		<mx:toolTip>Custom sound file for the alarm. Leave empty for default.</mx:toolTip>
	</mx:TextInput>
	<mx:Button x="149" y="76" label="Browse" click="selectAlarmFile()" width="64"/>
	
	<mx:Label x="10" y="106" color="#A9A9A9" text="Clock Sound:"/>
	<mx:TextInput id="clockFileLocationInput" x="10" y="122" width="131">
		<mx:toolTip>Custom sound file for the clock sound. Leave empty for default.</mx:toolTip>
	</mx:TextInput>
	<mx:Button x="149" y="122" label="Browse" click="selectClockFile()" width="64"/>
	
</config:BaseConfigPanel>
